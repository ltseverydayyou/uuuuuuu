getgenv().swordtGayFighterAhh = false

local function SafeGetService(name)
	local service = (cloneref and cloneref(game:GetService(name))) or game:GetService(name)
	return service
end

local p = SafeGetService("Players")
local l = p.LocalPlayer
local m = l:GetMouse()
local rs = SafeGetService("RunService")
local uis = SafeGetService("UserInputService")

local function getRoot(char)
	if not char or not char:IsA("Model") then return nil end
	if char:IsA("Player") then char = char.Character end
	local fallback
	for _, v in pairs(char:GetDescendants()) do
		if not v:IsA("BasePart") then continue end
		local name = v.Name:lower()
		if name == "humanoidrootpart" or name == "torso" or name == "uppertorso" or name == "lowertorso" then
			return v
		elseif not fallback then
			fallback = v
		end
	end
	return fallback
end

local function getTorso(char)
	if not char or not char:IsA("Model") then return nil end
	if char:IsA("Player") then char = char.Character end
	local fallback
	for _, v in pairs(char:GetDescendants()) do
		if not v:IsA("BasePart") then continue end
		local name = v.Name:lower()
		if name == "torso" or name == "uppertorso" or name == "lowertorso" or name == "humanoidrootpart" then
			return v
		elseif not fallback then
			fallback = v
		end
	end
	return fallback
end

local function getHead(char)
	if not char or not char:IsA("Model") then return nil end
	if char:IsA("Player") then char = char.Character end
	local fallback
	for _, v in pairs(char:GetDescendants()) do
		if not v:IsA("BasePart") then continue end
		local name = v.Name:lower()
		if name == "head" then
			return v
		elseif not fallback then
			fallback = v
		end
	end
	return fallback
end

local function getChar()
	return p.LocalPlayer.Character
end

local function getPlrChar(plr)
	return plr:IsA("Player") and plr.Character or plr or nil
end

local function getBp()
	return p.LocalPlayer:FindFirstChildWhichIsA("Backpack")
end

local function getHum()
	local char = getChar()
	if not char then return nil end
	for _, v in pairs(char:GetDescendants()) do
		if v:IsA("Humanoid") then return v end
	end
	return nil
end

local function getPlrHum(pp)
	local char = (pp:IsA("Player") and getPlrChar(pp)) or pp
	if not char then return nil end
	for _, v in pairs(char:GetDescendants()) do
		if v:IsA("Humanoid") then return v end
	end
	return nil
end

local function protectUI(sGui)
	if sGui:IsA("ScreenGui") then
		sGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
		sGui.DisplayOrder = 999999999
		sGui.ResetOnSpawn = false
		sGui.IgnoreGuiInset = true
	end

	local cGUI = SafeGetService("CoreGui")
	local lPlr = SafeGetService("Players").LocalPlayer

	local function NAProtection(inst, var)
		if inst then
			if var then
				inst[var] = "\0"
				inst.Archivable = false
			else
				inst.Name = "\0"
				inst.Archivable = false
			end
		end
	end

	if gethui then
		NAProtection(sGui)
		sGui.Parent = gethui()
	elseif cGUI and cGUI:FindFirstChild("RobloxGui") then
		NAProtection(sGui)
		sGui.Parent = cGUI:FindFirstChild("RobloxGui")
	elseif cGUI then
		NAProtection(sGui)
		sGui.Parent = cGUI
	elseif lPlr and lPlr:FindFirstChild("PlayerGui") then
		NAProtection(sGui)
		sGui.Parent = lPlr:FindFirstChild("PlayerGui")
		sGui.ResetOnSpawn = false
	end

	return sGui
end

NAdragV2 = function(ui, drag)
	if not drag then drag = ui end
	local sg = ui:FindFirstAncestorWhichIsA("ScreenGui") or ui.Parent
	local d, i, s, p

	local function upd(inp)
		local delta = inp.Position - s
		local ps = sg.AbsoluteSize
		local us = ui.AbsoluteSize
		local nx = p.X.Scale + (delta.X / ps.X)
		local ny = p.Y.Scale + (delta.Y / ps.Y)
		local a = ui.AnchorPoint
		local minX = a.X * (us.X / ps.X)
		local maxX = 1 - (1 - a.X) * (us.X / ps.X)
		local minY = a.Y * (us.Y / ps.Y)
		local maxY = 1 - (1 - a.Y) * (us.Y / ps.Y)
		nx = math.clamp(nx, minX, maxX)
		ny = math.clamp(ny, minY, maxY)
		ui.Position = UDim2.new(nx, 0, ny, 0)
	end

	drag.InputBegan:Connect(function(inp)
		if inp.UserInputType == Enum.UserInputType.MouseButton1 or inp.UserInputType == Enum.UserInputType.Touch then
			d, s, p = true, inp.Position, ui.Position
			inp.Changed:Connect(function()
				if inp.UserInputState == Enum.UserInputState.End then d = false end
			end)
		end
	end)

	drag.InputChanged:Connect(function(inp)
		if inp.UserInputType == Enum.UserInputType.MouseMovement or inp.UserInputType == Enum.UserInputType.Touch then
			i = inp
		end
	end)

	uis.InputChanged:Connect(function(inp)
		if inp == i and d then upd(inp) end
	end)

	sg:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		local ps = sg.AbsoluteSize
		local us = ui.AbsoluteSize
		local pos = ui.Position
		local a = ui.AnchorPoint
		local minX = a.X * (us.X / ps.X)
		local maxX = 1 - (1 - a.X) * (us.X / ps.X)
		local minY = a.Y * (us.Y / ps.Y)
		local maxY = 1 - (1 - a.Y) * (us.Y / ps.Y)
		local nx = math.clamp(pos.X.Scale, minX, maxX)
		local ny = math.clamp(pos.Y.Scale, minY, maxY)
		ui.Position = UDim2.new(nx, 0, ny, 0)
	end)

	ui.Active = true
end

rs.RenderStepped:Connect(function()
	if swordtGayFighterAhh then
		task.spawn(function()
			local t = l.Character and l.Character:FindFirstChildOfClass("Tool")
			if t and t:FindFirstChild("Handle") then
				t:Activate()
				for _, v in pairs(p:GetPlayers()) do
					if v ~= l and v.Character then
						local ch = v.Character
						local h = getPlrHum(v)
						local hrp = getRoot(ch)
						if h and h.Health > 0 and hrp and (l:DistanceFromCharacter(hrp.Position) <= 8) then
							for _, bp in pairs(ch:GetChildren()) do
								if bp:IsA("BasePart") then
									firetouchinterest(t.Handle, bp, 0)
									firetouchinterest(t.Handle, bp, 1)
								end
							end
						end
					end
				end
			end
		end)
	end
end)

local function gc()
	local cp, d = nil, math.huge
	for _, v in pairs(p:GetPlayers()) do
		if v ~= l and v.Character then
			local ch = v.Character
			local hrp = getRoot(ch)
			local h = getPlrHum(v)
			if hrp and h and h.Health > 0 and not ch:FindFirstChildOfClass("ForceField") then
				local mag = (hrp.Position - getRoot(l.Character).Position).Magnitude
				if mag < d then
					cp = v
					d = mag
				end
			end
		end
	end
	return cp
end

local currentTargetConnection
local currentTrackedTarget

task.spawn(function()
	while task.wait() do
		local s,f = pcall(function()
			if swordtGayFighterAhh and l.Character and getRoot(l.Character) then
				local t = gc()
				local myRoot = getRoot(l.Character)
				local myHum = getPlrHum(l.Character)

				if t and t.Character and getRoot(t.Character) and myHum then
					local targetRoot = getRoot(t.Character)
					local targetPos = Vector3.new(targetRoot.Position.X, myRoot.Position.Y, targetRoot.Position.Z)
					myRoot.CFrame = CFrame.new(myRoot.Position, targetPos) * CFrame.Angles(0, math.rad(25), 0)
					local moveTarget = Vector3.new(targetRoot.Position.X - 3, myRoot.Position.Y, targetRoot.Position.Z)
					myHum:MoveTo(moveTarget)

					if not currentTrackedTarget or currentTrackedTarget ~= t then
						if currentTargetConnection then
							currentTargetConnection:Disconnect()
							currentTargetConnection = nil
						end

						local targetHum = getPlrHum(t)
						if targetHum then
							currentTargetConnection = targetHum.StateChanged:Connect(function(_, newState)
								if swordtGayFighterAhh and (newState == Enum.HumanoidStateType.Freefall or newState == Enum.HumanoidStateType.Jumping) then
									if myHum and myHum:GetState() ~= Enum.HumanoidStateType.Freefall and myHum:GetState() ~= Enum.HumanoidStateType.Jumping then
										myHum:ChangeState(Enum.HumanoidStateType.Jumping)
									end
								end
							end)
							currentTrackedTarget = t
						end
					end
				end
			else
				if currentTargetConnection then
					currentTargetConnection:Disconnect()
					currentTargetConnection = nil
					currentTrackedTarget = nil
				end
			end
		end)
		if not s then
			warn("Error in Sword Fighter Bot: "..tostring(f))
		end
	end
end)

task.spawn(function()
	local ch = l.Character or l.CharacterAdded:Wait()
	local h = ch:WaitForChild("Humanoid")
	h:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
	h:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
end)

if uis.TouchEnabled then
	local gui = protectUI(Instance.new("ScreenGui"))
	local b = Instance.new("TextButton", gui)
	b.Size = UDim2.new(0, 120, 0, 50)
	b.AnchorPoint = Vector2.new(0.5,0)
	b.Position = UDim2.new(0.5, 0, 0.9, 0)
	b.AnchorPoint = Vector2.new(0, 1)
	b.Text = "Sword Fighter: OFF"
	b.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	b.TextColor3 = Color3.new(1, 1, 1)
	b.Font = Enum.Font.GothamBold
	b.TextScaled = true

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0.25, 0)
	corner.Parent = b

	b.MouseButton1Click:Connect(function()
		swordtGayFighterAhh = not swordtGayFighterAhh
		l.Character.Humanoid.AutoRotate = not swordtGayFighterAhh
		b.Text = swordtGayFighterAhh and "Sword Fighter: ON" or "Sword Fighter: OFF"
	end)

	NAdragV2(b)
end

m.KeyDown:Connect(function(k)
	if k:lower() == "x" then
		swordtGayFighterAhh = not swordtGayFighterAhh
		l.Character.Humanoid.AutoRotate = not swordtGayFighterAhh
	end
end)