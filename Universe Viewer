local G = Instance.new("ScreenGui")
local M = Instance.new("Frame")
local T = Instance.new("Frame")
local TTL = Instance.new("TextLabel")
local BH = Instance.new("Frame")
local BTN_MIN = Instance.new("TextButton")
local BTN_REF = Instance.new("TextButton")
local BTN_X = Instance.new("TextButton")
local BTN_MIN_C = Instance.new("UICorner")
local BTN_REF_C = Instance.new("UICorner")
local BTN_X_C = Instance.new("UICorner")
local M_C = Instance.new("UICorner")
local M_S = Instance.new("UIStroke")
local M_GR = Instance.new("UIGradient")
local T_C = Instance.new("UICorner")
local T_S = Instance.new("UIStroke")
local SB = Instance.new("TextBox")
local SB_C = Instance.new("UICorner")
local PAD = Instance.new("UIPadding")
local SORT = Instance.new("TextButton")
local SORT_C = Instance.new("UICorner")
local C = Instance.new("Frame")
local C_S = Instance.new("UIStroke")
local C_C = Instance.new("UICorner")
local LST = Instance.new("ScrollingFrame")
local LYT = Instance.new("UIListLayout")
local ROW_T = Instance.new("Frame")
local ROW_C = Instance.new("UICorner")
local ROW_S = Instance.new("UIStroke")
local ROW_TXT = Instance.new("TextButton")
local ROW_B = Instance.new("Frame")
local BTN_TP = Instance.new("TextButton")
local BTN_TP_C = Instance.new("UICorner")
local BTN_CP = Instance.new("TextButton")
local BTN_CP_C = Instance.new("UICorner")
local SP = Instance.new("TextLabel")
local EMP = Instance.new("TextLabel")
local SC = Instance.new("UIScale")
local MAX_RETRIES = 69
local RETRY_DELAY = 0.5

local function sv(n)
	local g = game.GetService
	local r = cloneref or function(x) return x end
	return r(g(game,n))
end

local function protect(sg)
	if sg:IsA("ScreenGui") then
		sg.ZIndexBehavior = Enum.ZIndexBehavior.Global
		sg.DisplayOrder = 999999999
		sg.ResetOnSpawn = false
		sg.IgnoreGuiInset = true
	end
	local cg = sv("CoreGui")
	local lp = sv("Players").LocalPlayer
	local function na(i,v)
		if i then
			if v then i[v] = "\0" i.Archivable = false else i.Name = "\0" i.Archivable = false end
		end
	end
	if gethui then na(sg) sg.Parent = gethui() return sg
	elseif cg and cg:FindFirstChild("RobloxGui") then na(sg) sg.Parent = cg:FindFirstChild("RobloxGui") return sg
	elseif cg then na(sg) sg.Parent = cg return sg
	elseif lp and lp:FindFirstChildWhichIsA("PlayerGui") then na(sg) sg.Parent = lp:FindFirstChildWhichIsA("PlayerGui") sg.ResetOnSpawn=false return sg
	else return nil end
end

local IsOnMobile=(function()
	local platform=sv("UserInputService"):GetPlatform()
	if platform==Enum.Platform.IOS or platform==Enum.Platform.Android or platform==Enum.Platform.AndroidTV or platform==Enum.Platform.Chromecast or platform==Enum.Platform.MetaOS then
		return true
	end
	if platform==Enum.Platform.None then
		return sv("UserInputService").TouchEnabled and not (sv("UserInputService").KeyboardEnabled or sv("UserInputService").MouseEnabled)
	end
	return false
end)()

G.Name = "UV"
protect(G)
G.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
G.ResetOnSpawn = false

M.Name = "M"
M.Parent = G
M.BackgroundColor3 = Color3.fromRGB(22,20,28)
M.Position = UDim2.fromScale(.5,.5)
M.AnchorPoint = Vector2.new(.5,.5)
M.Size = UDim2.new(.44,0,.58,0)
M.ClipsDescendants = true

SC.Parent = M
SC.Scale = 1

M_C.CornerRadius = UDim.new(0,12)
M_C.Parent = M

M_S.Parent = M
M_S.Thickness = 1
M_S.Transparency = .45
M_S.Color = Color3.fromRGB(140,120,200)

M_GR.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0,Color3.fromRGB(18,16,24)),
	ColorSequenceKeypoint.new(1,Color3.fromRGB(12,10,16))
}
M_GR.Rotation = 90
M_GR.Parent = M

T.Name = "T"
T.Parent = M
T.BackgroundColor3 = Color3.fromRGB(28,24,36)
T.Size = UDim2.new(1,0,0,42)
T.ZIndex = 2

T_S.Parent = T
T_S.Thickness = 1
T_S.Transparency = .25
T_S.Color = Color3.fromRGB(110,95,170)

T_C.CornerRadius = UDim.new(0,12)
T_C.Parent = T

TTL.Name = "TTL"
TTL.Parent = T
TTL.BackgroundTransparency = 1
TTL.Position = UDim2.new(0,12,0,0)
TTL.Size = UDim2.new(.6,0,1,0)
TTL.Font = Enum.Font.SourceSans
TTL.Text = "Universe Viewer"
TTL.TextColor3 = Color3.fromRGB(240,235,255)
TTL.TextSize = 20
TTL.TextXAlignment = Enum.TextXAlignment.Left

BH.Name = "BH"
BH.Parent = T
BH.BackgroundTransparency = 1
BH.AnchorPoint = Vector2.new(1,0)
BH.Position = UDim2.new(1,-8,0,8)
BH.Size = UDim2.new(0,0,0,26)
BH.AutomaticSize = Enum.AutomaticSize.X
BH.ZIndex = 3

local BH_LYT = Instance.new("UIListLayout")
BH_LYT.Parent = BH
BH_LYT.FillDirection = Enum.FillDirection.Horizontal
BH_LYT.Padding = UDim.new(0,8)
BH_LYT.HorizontalAlignment = Enum.HorizontalAlignment.Right
BH_LYT.VerticalAlignment = Enum.VerticalAlignment.Center
BH_LYT.SortOrder = Enum.SortOrder.LayoutOrder

BTN_MIN.Name = "BTN_MIN"
BTN_MIN.Parent = BH
BTN_MIN.BackgroundColor3 = Color3.fromRGB(48,40,70)
BTN_MIN.Size = UDim2.new(0,40,0,26)
BTN_MIN.Font = Enum.Font.SourceSans
BTN_MIN.Text = "‚ñÅ"
BTN_MIN.TextColor3 = Color3.fromRGB(230,225,255)
BTN_MIN.TextSize = 18
BTN_MIN.LayoutOrder = 1

BTN_MIN_C.CornerRadius = UDim.new(0,6)
BTN_MIN_C.Parent = BTN_MIN

BTN_REF.Name = "BTN_REF"
BTN_REF.Parent = BH
BTN_REF.BackgroundColor3 = Color3.fromRGB(56,46,92)
BTN_REF.Size = UDim2.new(0,48,0,26)
BTN_REF.Font = Enum.Font.SourceSans
BTN_REF.Text = "üîÉ"
BTN_REF.TextColor3 = Color3.fromRGB(230,225,255)
BTN_REF.TextSize = 18
BTN_REF.LayoutOrder = 2

BTN_REF_C.CornerRadius = UDim.new(0,6)
BTN_REF_C.Parent = BTN_REF

BTN_X.Name = "BTN_X"
BTN_X.Parent = BH
BTN_X.BackgroundColor3 = Color3.fromRGB(186,54,74)
BTN_X.Size = UDim2.new(0,40,0,26)
BTN_X.Font = Enum.Font.SourceSans
BTN_X.Text = "‚úñ"
BTN_X.TextColor3 = Color3.fromRGB(255,255,255)
BTN_X.TextSize = 16
BTN_X.LayoutOrder = 4

BTN_X_C.CornerRadius = UDim.new(0,6)
BTN_X_C.Parent = BTN_X

SB.Name = "SB"
SB.Parent = M
SB.BackgroundColor3 = Color3.fromRGB(30,26,42)
SB.Position = UDim2.new(0,12,0,54)
SB.Size = UDim2.new(1,-24,0,36)
SB.Font = Enum.Font.SourceSans
SB.PlaceholderText = "Search"
SB.Text = ""
SB.TextColor3 = Color3.fromRGB(240,235,255)
SB.TextSize = 18
SB.ClearTextOnFocus = false

PAD.Parent = SB
PAD.PaddingLeft = UDim.new(0,12)
PAD.PaddingRight = UDim.new(0,96)

SB_C.CornerRadius = UDim.new(0,8)
SB_C.Parent = SB

SORT.Name = "SORT"
SORT.Parent = SB
SORT.AnchorPoint = Vector2.new(1,.5)
SORT.Position = UDim2.new(1,-6,.5,0)
SORT.Size = UDim2.new(0,90,0,26)
SORT.BackgroundColor3 = Color3.fromRGB(54,48,76)
SORT.Font = Enum.Font.SourceSans
SORT.Text = "Sort: A‚ÜíZ"
SORT.TextSize = 16
SORT.TextColor3 = Color3.fromRGB(230,225,255)

SORT_C.CornerRadius = UDim.new(0,6)
SORT_C.Parent = SORT

C.Name = "C"
C.Parent = M
C.BackgroundColor3 = Color3.fromRGB(24,20,34)
C.Position = UDim2.new(0,12,0,98)
C.Size = UDim2.new(1,-24,1,-110)
C.BackgroundTransparency = .05

C_S.Parent = C
C_S.Thickness = 1
C_S.Transparency = .4
C_S.Color = Color3.fromRGB(115,100,175)

C_C.CornerRadius = UDim.new(0,10)
C_C.Parent = C

LST.Name = "LST"
LST.Parent = C
LST.BackgroundTransparency = 1
LST.Position = UDim2.new(0,8,0,8)
LST.Size = UDim2.new(1,-16,1,-16)
LST.CanvasSize = UDim2.new(0,0,0,0)
LST.ScrollBarThickness = 6
LST.AutomaticCanvasSize = Enum.AutomaticSize.Y

LYT.Parent = LST
LYT.SortOrder = Enum.SortOrder.LayoutOrder
LYT.Padding = UDim.new(0,8)

ROW_T.Name = "ROW_T"
ROW_T.Parent = nil
ROW_T.BackgroundColor3 = Color3.fromRGB(34,28,50)
ROW_T.Size = UDim2.new(1,-4,0,58)
ROW_T.Position = UDim2.new(0,2,0,0)
ROW_T.BackgroundTransparency = .1
ROW_T.ClipsDescendants = false

ROW_C.CornerRadius = UDim.new(0,8)
ROW_C.Parent = ROW_T

ROW_S.Parent = ROW_T
ROW_S.Thickness = 1
ROW_S.Transparency = .55
ROW_S.Color = Color3.fromRGB(140,120,200)
ROW_S.Name = "S"

ROW_TXT.Name = "ROW_TXT"
ROW_TXT.Parent = ROW_T
ROW_TXT.BackgroundTransparency = 1
ROW_TXT.Position = UDim2.new(0,10,0,0)
ROW_TXT.Size = UDim2.new(.58,-10,1,0)
ROW_TXT.Font = Enum.Font.SourceSans
ROW_TXT.Text = "Name (ID)"
ROW_TXT.TextColor3 = Color3.fromRGB(245,240,255)
ROW_TXT.TextSize = 18
ROW_TXT.TextXAlignment = Enum.TextXAlignment.Left
ROW_TXT.TextYAlignment = Enum.TextYAlignment.Center
ROW_TXT.TextTruncate = Enum.TextTruncate.AtEnd

ROW_B.Name = "ROW_B"
ROW_B.Parent = ROW_T
ROW_B.BackgroundTransparency = 1
ROW_B.Position = UDim2.new(.58,0,0,0)
ROW_B.Size = UDim2.new(.42,-8,1,0)

local RB_LYT = Instance.new("UIListLayout")
RB_LYT.Parent = ROW_B
RB_LYT.FillDirection = Enum.FillDirection.Horizontal
RB_LYT.Padding = UDim.new(0,8)
RB_LYT.HorizontalAlignment = Enum.HorizontalAlignment.Right
RB_LYT.VerticalAlignment = Enum.VerticalAlignment.Center
RB_LYT.SortOrder = Enum.SortOrder.LayoutOrder

BTN_TP.Name = "BTN_TP"
BTN_TP.Parent = ROW_B
BTN_TP.BackgroundColor3 = Color3.fromRGB(72,126,232)
BTN_TP.Size = UDim2.new(0,120,0,26)
BTN_TP.Font = Enum.Font.SourceSans
BTN_TP.Text = "Teleport"
BTN_TP.TextColor3 = Color3.fromRGB(255,255,255)
BTN_TP.TextSize = 16

BTN_TP_C.CornerRadius = UDim.new(0,6)
BTN_TP_C.Parent = BTN_TP

BTN_CP.Name = "BTN_CP"
BTN_CP.Parent = ROW_B
BTN_CP.BackgroundColor3 = Color3.fromRGB(84,186,128)
BTN_CP.Size = UDim2.new(0,90,0,26)
BTN_CP.Font = Enum.Font.SourceSans
BTN_CP.Text = "Copy ID"
BTN_CP.TextColor3 = Color3.fromRGB(255,255,255)
BTN_CP.TextSize = 16

BTN_CP_C.CornerRadius = UDim.new(0,6)
BTN_CP_C.Parent = BTN_CP

SP.Name = "SP"
SP.Parent = C
SP.AnchorPoint = Vector2.new(.5,.5)
SP.BackgroundTransparency = 1
SP.Size = UDim2.new(0,30,0,30)
SP.Position = UDim2.new(.5,0,.5,0)
SP.Text = "‚è≥"
SP.TextColor3 = Color3.fromRGB(210,205,235)
SP.Font = Enum.Font.SourceSans
SP.TextSize = 22
SP.Visible = false

EMP.Name = "EMP"
EMP.Parent = C
EMP.BackgroundTransparency = 1
EMP.Text = "No places"
EMP.Font = Enum.Font.SourceSans
EMP.TextSize = 16
EMP.TextColor3 = Color3.fromRGB(210,205,230)
EMP.AnchorPoint = Vector2.new(.5,1)
EMP.Position = UDim2.new(.5,0,1,-8)
EMP.Visible = false

local TS = sv("TweenService")
local UIS = sv("UserInputService")
local RS = sv("RunService")
local TPX = sv("TeleportService")
local P = sv("Players")
local AS = sv("AssetService")
local HS = sv("HttpService")
local LP = P.LocalPlayer

local function tw(o,t,e,d,g) return TS:Create(o,TweenInfo.new(t,e or Enum.EasingStyle.Quad,d or Enum.EasingDirection.Out),g) end

local function rp(b)
	local r = Instance.new("Frame")
	r.BackgroundColor3 = Color3.fromRGB(255,255,255)
	r.BackgroundTransparency = .7
	r.Size = UDim2.fromOffset(0,0)
	r.AnchorPoint = Vector2.new(.5,.5)
	r.Position = UDim2.fromScale(.5,.5)
	r.ZIndex = b.ZIndex+1
	r.Parent = b
	local rc = Instance.new("UICorner")
	rc.CornerRadius = UDim.new(1,0)
	rc.Parent = r
	tw(r,.2,nil,nil,{Size=UDim2.fromOffset(84,84),BackgroundTransparency=1}):Play()
	task.delay(.25,function() r:Destroy() end)
end

local function press(b)
	local s = b:FindFirstChildOfClass("UIScale") or Instance.new("UIScale",b)
	b.MouseButton1Down:Connect(function() tw(s,.08,nil,Enum.EasingDirection.In,{Scale=.96}):Play() end)
	b.MouseButton1Up:Connect(function() tw(s,.1,nil,nil,{Scale=1}):Play() end)
end

local function hv(b,base,light,lock)
	local hover = lock and base or light
	b.MouseEnter:Connect(function() tw(b,.15,nil,nil,{BackgroundColor3=hover}):Play() end)
	b.MouseLeave:Connect(function() tw(b,.18,nil,nil,{BackgroundColor3=base}):Play() end)
	b.MouseButton1Click:Connect(function() rp(b) end)
	press(b)
end

hv(BTN_MIN, BTN_MIN.BackgroundColor3, Color3.fromRGB(64,56,100))
hv(BTN_REF, BTN_REF.BackgroundColor3, Color3.fromRGB(74,62,120))
hv(BTN_X, BTN_X.BackgroundColor3, Color3.fromRGB(210,70,92))
hv(SORT, SORT.BackgroundColor3, Color3.fromRGB(66,58,92))
hv(BTN_TP, BTN_TP.BackgroundColor3, Color3.fromRGB(92,146,242))
hv(BTN_CP, BTN_CP.BackgroundColor3, Color3.fromRGB(104,206,148))

local function drag(ui,bar)
	bar = bar or ui
	local dr,di,ds,sp
	local function upd(i)
		local d = i.Position - ds
		ui.Position = UDim2.new(sp.X.Scale, sp.X.Offset + d.X, sp.Y.Scale, sp.Y.Offset + d.Y)
	end
	bar.InputBegan:Connect(function(i)
		if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
			dr=true ds=i.Position sp=ui.Position
			i.Changed:Connect(function() if i.UserInputState==Enum.UserInputState.End then dr=false end end)
		end
	end)
	bar.InputChanged:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch then di=i end end)
	UIS.InputChanged:Connect(function(i) if i==di and dr then upd(i) end end)
	ui.Active=true
end

drag(M,T)

local function inFX()
	SC.Scale = .92
	M.BackgroundTransparency = .2
	tw(SC,.22,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,{Scale=1}):Play()
	tw(M,.22,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,{BackgroundTransparency=0}):Play()
end

local sortMode = "NAME"
local minimized = false
local szDesktop = UDim2.new(.44,0,.58,0)
local szMobile = UDim2.new(.94,0,.66,0)
local normSize = szDesktop

local function pickSize()
	local cam = workspace.CurrentCamera
	local vs = cam and cam.ViewportSize or Vector2.new(1280,720)
	if IsOnMobile or vs.X<900 then normSize = szMobile else normSize = szDesktop end
end

local function applySize(force)
	if minimized and not force then return end
	M.Size = minimized and UDim2.new(normSize.X.Scale,normSize.X.Offset,0,42) or normSize
end

workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
	local cam = workspace.CurrentCamera
	if cam then cam:GetPropertyChangedSignal("ViewportSize"):Connect(function() pickSize() applySize(false) end) end
end)

UIS.LastInputTypeChanged:Connect(function() pickSize() applySize(false) end)

local function hideBody(h)
	minimized = h
	if h then
		tw(M,.2,nil,nil,{Size=UDim2.new(normSize.X.Scale,normSize.X.Offset,0,42)}):Play()
		C.Visible=false SB.Visible=false
	else
		tw(M,.2,nil,nil,{Size=normSize}):Play()
		task.delay(.16,function() if not minimized then C.Visible=true SB.Visible=true end end)
	end
end

BTN_MIN.MouseButton1Click:Connect(function() hideBody(not minimized) end)

BTN_X.MouseButton1Click:Connect(function()
	rp(BTN_X)
	tw(SC,.15,Enum.EasingStyle.Quad,Enum.EasingDirection.In,{Scale=.92}):Play()
	tw(M,.15,Enum.EasingStyle.Quad,Enum.EasingDirection.In,{BackgroundTransparency=.25}):Play()
	task.delay(.14,function() if _G._uv_canvas and _G._uv_canvas.Disconnect then _G._uv_canvas:Disconnect() end if _G._uv_df and _G._uv_df.Disconnect then _G._uv_df:Disconnect() end G:Destroy() end)
end)

local function spn(v)
	SP.Visible = v
	if v then
		task.spawn(function()
			local a={"‚†ã","‚†ô","‚†π","‚†∏","‚†º","‚†¥","‚†¶","‚†ß","‚†á","‚†è"}
			local i=1
			while SP.Visible do
				SP.Text=a[i]; i=(i%#a)+1; task.wait(.08)
			end
		end)
	end
end

local toRoot = Instance.new("Frame")
toRoot.Name = "TOAST_ROOT"
toRoot.Parent = G
toRoot.AnchorPoint = Vector2.new(1,0)
toRoot.Position = UDim2.new(1,-12,0,12)
toRoot.Size = UDim2.new(0,320,1,-24)
toRoot.BackgroundTransparency = 1
toRoot.ZIndex = 5

local toList = Instance.new("UIListLayout")
toList.Parent = toRoot
toList.FillDirection = Enum.FillDirection.Vertical
toList.HorizontalAlignment = Enum.HorizontalAlignment.Right
toList.VerticalAlignment = Enum.VerticalAlignment.Top
toList.SortOrder = Enum.SortOrder.LayoutOrder
toList.Padding = UDim.new(0,8)

local function toast(ti,tx,dur)
	dur = dur or 3
	local f = Instance.new("Frame")
	f.Size = UDim2.new(0,320,0,0)
	f.BackgroundColor3 = Color3.fromRGB(36,32,48)
	f.BackgroundTransparency = .2
	f.Parent = toRoot
	f.ClipsDescendants = true
	f.ZIndex = 6
	local fc = Instance.new("UICorner",f)
	fc.CornerRadius = UDim.new(0,10)
	local fs = Instance.new("UIStroke",f)
	fs.Color = Color3.fromRGB(120,100,180)
	fs.Transparency = .35
	local t1 = Instance.new("TextLabel")
	t1.Parent = f
	t1.BackgroundTransparency = 1
	t1.Size = UDim2.new(1,-16,0,22)
	t1.Position = UDim2.new(0,8,0,8)
	t1.Font = Enum.Font.SourceSans
	t1.TextXAlignment = Enum.TextXAlignment.Left
	t1.TextColor3 = Color3.fromRGB(245,240,255)
	t1.TextSize = 18
	t1.Text = ti or "Notice"
	local t2 = Instance.new("TextLabel")
	t2.Parent = f
	t2.BackgroundTransparency = 1
	t2.Size = UDim2.new(1,-16,0,18)
	t2.Position = UDim2.new(0,8,0,32)
	t2.Font = Enum.Font.SourceSans
	t2.TextXAlignment = Enum.TextXAlignment.Left
	t2.TextColor3 = Color3.fromRGB(225,220,240)
	t2.TextSize = 16
	t2.TextWrapped = true
	t2.Text = tx or ""
	f.Size = UDim2.new(0,320,0,60)
	f.BackgroundTransparency = 1
	fs.Transparency = 1
	tw(f,.18,nil,nil,{BackgroundTransparency=.2}):Play()
	tw(fs,.18,nil,nil,{Transparency=.35}):Play()
	task.delay(dur,function()
		tw(f,.18,nil,Enum.EasingDirection.In,{BackgroundTransparency=1,Size=UDim2.new(0,320,0,0)}):Play()
		tw(fs,.14,nil,Enum.EasingDirection.In,{Transparency=1}):Play()
		task.delay(.18,function() f:Destroy() end)
	end)
end

local function note(t,d,nm) toast(nm or "Notice",t,d) end

local rows = {}
local fetching = false
local openRow = nil

local function clr()
	for _,it in ipairs(rows) do
		if it.f then it.f:Destroy() end
	end
	table.clear(rows)
	openRow=nil
end

local function apply()
	local q = string.lower(SB.Text)
	local a = {}
	for _,it in ipairs(rows) do
		local v = (q=="" or string.find(string.lower(it.n), q) or string.find(tostring(it.id), q))
		it.f.Visible = v
		if v then table.insert(a,it) end
	end
	table.sort(a,function(x,y)
		if x.cur ~= y.cur then return x.cur end
		if sortMode=="NAME" then return string.lower(x.n)<string.lower(y.n) else return x.id<y.id end
	end)
	for i,ob in ipairs(a) do ob.f.LayoutOrder=i end
	EMP.Visible = (#a==0)
end

local function closeRow(r)
	if not r or not r.expOpen then return end
	r.expOpen=false
	tw(r.f,.16,nil,Enum.EasingDirection.In,{Size=UDim2.new(1,-4,0,58)}):Play()
	tw(r.exp,.16,nil,Enum.EasingDirection.In,{Size=UDim2.new(1,-16,0,0),BackgroundTransparency=1}):Play()
	task.delay(.16,function() r.exp.Visible=false r.hdr.Visible=false end)
	if r.btnSRV then r.btnSRV.Text = "Servers" end
end

local function srvSpin(lbl,v)
	lbl.Visible = v
	if v then
		task.spawn(function()
			local a={"‚†ã","‚†ô","‚†π","‚†∏","‚†º","‚†¥","‚†¶","‚†ß","‚†á","‚†è"}
			local i=1
			while lbl.Visible do
				lbl.Text=a[i]; i=(i%#a)+1; task.wait(.08)
			end
		end)
	end
end

local function srvFetch(placeId,r)
	for _,c in ipairs(r.slist:GetChildren()) do if c:IsA("TextButton") or c:IsA("Frame") then c:Destroy() end end
	r.semp.Visible=false
	srvSpin(r.ssp,true)
	local url = "https://games.roblox.com/v1/games/"..tostring(placeId).."/servers/Public?sortOrder=Asc&limit=100"
	local ok,resp = pcall(function() return game:HttpGetAsync(url) end)
	if not ok then
		srvSpin(r.ssp,false)
		r.semp.Text="Failed to load"
		r.semp.Visible=true
		return
	end
	local data = {}
	local decOk,res = pcall(function() return HS:JSONDecode(resp) end)
	if decOk and res and res.data then
		for _,v in ipairs(res.data) do
			if type(v)=="table" and v.maxPlayers>v.playing and v.id~=game.JobId then
				table.insert(data,{id=v.id,playing=v.playing,max=v.maxPlayers,fps=tonumber(v.fps) or 0,ping=tonumber(v.ping) or 0})
			end
		end
	end
	table.sort(data,function(a,b) return a.playing>b.playing end)
	srvSpin(r.ssp,false)
	if #data==0 then
		r.semp.Text="No servers"
		r.semp.Visible=true
		return
	end
	for _,entry in ipairs(data) do
		local b = Instance.new("TextButton")
		b.Parent = r.slist
		b.BackgroundColor3 = Color3.fromRGB(36,32,50)
		b.AutoButtonColor = true
		b.Size = UDim2.new(1,0,0,32)
		b.AutomaticSize = Enum.AutomaticSize.Y
		b.TextColor3 = Color3.fromRGB(245,240,255)
		b.Font = Enum.Font.SourceSans
		b.TextSize = 16
		b.TextWrapped = true
		b.TextXAlignment = Enum.TextXAlignment.Left
		b.TextYAlignment = Enum.TextYAlignment.Center
		b.Text = tostring(entry.playing).."/"..tostring(entry.max).." - "..tostring(entry.id).."\nFPS: "..string.format("%.2f",entry.fps).."  ‚Ä¢  Ping: "..tostring(entry.ping).."ms"
		local pad = Instance.new("UIPadding",b)
		pad.PaddingLeft = UDim.new(0,10)
		pad.PaddingRight = UDim.new(0,10)
		pad.PaddingTop = UDim.new(0,6)
		pad.PaddingBottom = UDim.new(0,6)
		local bc = Instance.new("UICorner",b)
		bc.CornerRadius = UDim.new(0,6)
		local bs = Instance.new("UIStroke",b)
		bs.Color = Color3.fromRGB(120,100,180)
		bs.Transparency = .55
		hv(b, b.BackgroundColor3, Color3.fromRGB(44,38,62))
		b.MouseButton1Click:Connect(function()
			local ok2,e = pcall(function() TPX:TeleportToPlaceInstance(placeId, entry.id, LP) end)
			if ok2 then note("Serverhop: "..entry.playing.."/"..entry.max,2,"Universe Viewer") else note("Teleport failed: "..tostring(e),4,"Universe Viewer") end
		end)
	end
end

local function mk(pl,idx)
	local f = ROW_T:Clone()
	f.Parent = LST
	f.Name = "R"
	f.BackgroundTransparency = 1
	local s = f:FindFirstChild("S") or f:FindFirstChildWhichIsA("UIStroke")
	if s then s.Transparency = 1 end
	f.Visible = false
	f.ROW_TXT.Text = pl.Name.." ("..pl.PlaceId..")"

	local btp = f.ROW_B.BTN_TP
	local bcp = f.ROW_B.BTN_CP
	hv(btp, btp.BackgroundColor3, Color3.fromRGB(92,146,242))
	hv(bcp, bcp.BackgroundColor3, Color3.fromRGB(104,206,148))

	local bsrv = Instance.new("TextButton")
	bsrv.Name = "BTN_SRV"
	bsrv.Parent = f.ROW_B
	bsrv.BackgroundColor3 = Color3.fromRGB(64,54,112)
	bsrv.Size = UDim2.new(0,110,0,26)
	bsrv.Font = Enum.Font.SourceSans
	bsrv.Text = "Servers"
	bsrv.TextColor3 = Color3.fromRGB(230,225,255)
	bsrv.TextSize = 16
	local bsrv_c = Instance.new("UICorner",bsrv)
	bsrv_c.CornerRadius = UDim.new(0,6)
	hv(bsrv, bsrv.BackgroundColor3, Color3.fromRGB(76,64,132))

	local expHeaderH = 32
	local expListH = 180

	local hdr = Instance.new("Frame")
	hdr.Name = "EXP_HDR"
	hdr.Parent = f
	hdr.BackgroundTransparency = 1
	hdr.Position = UDim2.new(0,8,0,66)
	hdr.Size = UDim2.new(1,-16,0,expHeaderH)
	hdr.Visible = false
	hdr.ZIndex = 7

	local hl = Instance.new("TextLabel")
	hl.Parent = hdr
	hl.BackgroundTransparency = 1
	hl.Position = UDim2.new(0,0,0,0)
	hl.Size = UDim2.new(1,-90,1,0)
	hl.Text = "Available Servers"
	hl.Font = Enum.Font.SourceSans
	hl.TextSize = 18
	hl.TextXAlignment = Enum.TextXAlignment.Left
	hl.TextColor3 = Color3.fromRGB(235,230,250)
	hl.ZIndex = 7

	local hclose = Instance.new("TextButton")
	hclose.Parent = hdr
	hclose.BackgroundColor3 = Color3.fromRGB(56,46,92)
	hclose.Size = UDim2.new(0,80,1,0)
	hclose.Position = UDim2.new(1,-80,0,0)
	hclose.Font = Enum.Font.SourceSans
	hclose.Text = "Close"
	hclose.TextSize = 16
	hclose.TextColor3 = Color3.fromRGB(230,225,255)
	hclose.ZIndex = 7
	local hclose_c = Instance.new("UICorner",hclose)
	hclose_c.CornerRadius = UDim.new(0,6)
	hv(hclose, hclose.BackgroundColor3, Color3.fromRGB(74,62,120))

	local exp = Instance.new("Frame")
	exp.Name = "EXP"
	exp.Parent = f
	exp.BackgroundColor3 = Color3.fromRGB(24,20,34)
	exp.Position = UDim2.new(0,8,0,66+expHeaderH)
	exp.Size = UDim2.new(1,-16,0,0)
	exp.BackgroundTransparency = 1
	exp.Visible=false
	exp.ZIndex = 6
	local expc = Instance.new("UICorner",exp)
	expc.CornerRadius = UDim.new(0,8)
	local exps = Instance.new("UIStroke",exp)
	exps.Color = Color3.fromRGB(120,100,180)
	exps.Transparency = .45

	local slist = Instance.new("ScrollingFrame")
	slist.Parent = exp
	slist.BackgroundTransparency = 1
	slist.Position = UDim2.new(0,8,0,8)
	slist.Size = UDim2.new(1,-16,1,-16)
	slist.CanvasSize = UDim2.new(0,0,0,0)
	slist.AutomaticCanvasSize = Enum.AutomaticSize.Y
	slist.ScrollBarThickness = 6
	slist.ZIndex = 7
	local slyt = Instance.new("UIListLayout",slist)
	slyt.Padding = UDim.new(0,8)
	slyt.SortOrder = Enum.SortOrder.LayoutOrder

	local ssp = Instance.new("TextLabel")
	ssp.Parent = exp
	ssp.AnchorPoint = Vector2.new(.5,.5)
	ssp.BackgroundTransparency = 1
	ssp.Size = UDim2.new(0,30,0,30)
	ssp.Position = UDim2.new(.5,0,.5,0)
	ssp.Text = "‚è≥"
	ssp.TextColor3 = Color3.fromRGB(210,205,235)
	ssp.Font = Enum.Font.SourceSans
	ssp.TextSize = 22
	ssp.ZIndex = 8
	ssp.Visible = false

	local semp = Instance.new("TextLabel")
	semp.Parent = exp
	semp.BackgroundTransparency = 1
	semp.Text = "No servers"
	semp.Font = Enum.Font.SourceSans
	semp.TextSize = 16
	semp.TextColor3 = Color3.fromRGB(210,205,230)
	semp.AnchorPoint = Vector2.new(.5,1)
	semp.Position = UDim2.new(.5,0,1,-8)
	semp.ZIndex = 7
	semp.Visible = false

	local isCurrent = (pl.PlaceId==game.PlaceId)
	if isCurrent then
		f.BackgroundColor3 = Color3.fromRGB(40,34,64)
		if s then s.Transparency = .35 end
		local cya = Color3.fromRGB(0,208,255)
		btp.Text = "You Are Here"
		btp.AutoButtonColor = false
		btp.Active = true
		btp.BackgroundColor3 = cya
		btp.TextColor3 = Color3.fromRGB(20,24,28)
		hv(btp, cya, cya, true)
		local ylw = Color3.fromRGB(248,196,84)
		bsrv.BackgroundColor3 = ylw
		bsrv.TextColor3 = Color3.fromRGB(30,26,20)
		bsrv.AutoButtonColor = false
		hv(bsrv, ylw, ylw, true)
	end

	local it = {f=f,n=pl.Name,id=pl.PlaceId,exp=exp,hdr=hdr,slist=slist,ssp=ssp,semp=semp,expOpen=false,btnSRV=bsrv,cur=isCurrent}
	table.insert(rows,it)

	f.MouseEnter:Connect(function()
		tw(f,.12,nil,nil,{BackgroundTransparency=.05}):Play()
		if s then tw(s,.15,nil,nil,{Transparency=isCurrent and .25 or .25}):Play() end
	end)
	f.MouseLeave:Connect(function()
		tw(f,.18,nil,nil,{BackgroundTransparency=.1}):Play()
		if s then tw(s,.2,nil,nil,{Transparency=isCurrent and .35 or .55}):Play() end
	end)

	btp.MouseButton1Click:Connect(function()
		if isCurrent then
			local ok,e = pcall(function() TPX:TeleportToPlaceInstance(game.PlaceId, game.JobId, LP) end)
			if ok then note("Rejoining this server",2,"Universe Viewer") else note("Teleport failed: "..tostring(e),4,"Universe Viewer") end
		else
			local ok,e = pcall(function() TPX:Teleport(pl.PlaceId, LP) end)
			if ok then note("Teleporting to "..pl.Name,2,"Universe Viewer") else note("Teleport failed: "..tostring(e),4,"Universe Viewer") end
		end
	end)
	bcp.MouseButton1Click:Connect(function()
		if setclipboard then setclipboard(tostring(pl.PlaceId)) note("Copied ID: "..pl.PlaceId,2,"Universe Viewer") else note("Clipboard unavailable",3,"Universe Viewer") end
	end)

	bsrv.MouseButton1Click:Connect(function()
		if it.expOpen then
			closeRow(it)
			if openRow==it then openRow=nil end
		else
			if openRow and openRow~=it then closeRow(openRow) end
			it.hdr.Visible=true
			it.exp.Visible=true
			it.expOpen=true
			tw(it.f,.16,nil,nil,{Size=UDim2.new(1,-4,0,58+expHeaderH+expListH+16)}):Play()
			tw(it.exp,.16,nil,nil,{Size=UDim2.new(1,-16,0,expListH),BackgroundTransparency=.05}):Play()
			it.btnSRV.Text = "Servers (close)"
			openRow=it
			srvFetch(pl.PlaceId,it)
		end
	end)
	hclose.MouseButton1Click:Connect(function() closeRow(it) if openRow==it then openRow=nil end end)

	task.delay(idx*0.012,function()
		f.Visible=true
		f.BackgroundTransparency=.2
		if s then s.Transparency = isCurrent and .35 or .7 end
		f.Size = UDim2.new(1,-4,0,0)
		tw(f,.18,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,{Size=UDim2.new(1,-4,0,58),BackgroundTransparency=.1}):Play()
		if s then tw(s,.18,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,{Transparency=isCurrent and .35 or .55}):Play() end
	end)
end

local function fetch()
	if fetching then return end
	fetching = true
	spn(true)
	EMP.Visible = false
	clr()
	note("Loading places...",2,"Universe Viewer")
	local tr,ok,pg = 0,false,nil
	while tr<MAX_RETRIES do
		tr+=1
		local s,r = pcall(function() pg = AS:GetGamePlacesAsync() end)
		if s then ok=true break else task.wait(RETRY_DELAY) end
	end
	if not ok then spn(false) fetching=false note("Failed to load places",4,"Universe Viewer") return end
	local i=0
	while true do
		for _,pl in pg:GetCurrentPage() do
			i+=1
			mk(pl,i)
		end
		if pg.IsFinished then break end
		pg:AdvanceToNextPageAsync()
	end
	spn(false)
	apply()
	fetching=false
end

local function deb()
	if _G._uv_df and _G._uv_df.Disconnect then _G._uv_df:Disconnect() end
	local rs = RS.RenderStepped:Connect(function() end)
	_G._uv_df = rs
	task.delay(.08,function() if _G._uv_df then _G._uv_df:Disconnect() _G._uv_df=nil end apply() end)
end

SB.Focused:Connect(function()
	tw(SB,.12,nil,nil,{BackgroundColor3=Color3.fromRGB(36,32,50)}):Play()
end)
SB.FocusLost:Connect(function()
	tw(SB,.16,nil,nil,{BackgroundColor3=Color3.fromRGB(30,26,42)}):Play()
end)
SB.Changed:Connect(function(p) if p=="Text" then deb() end end)

SORT.MouseButton1Click:Connect(function()
	sortMode = (sortMode=="NAME") and "ID" or "NAME"
	SORT.Text = (sortMode=="NAME") and "Sort: A‚ÜíZ" or "Sort: ID"
	rp(SORT)
	apply()
end)

BTN_REF.MouseButton1Click:Connect(function() rp(BTN_REF) fetch() end)

local function canvas()
	if _G._uv_canvas and _G._uv_canvas.Disconnect then _G._uv_canvas:Disconnect() end
	_G._uv_canvas = RS.Stepped:Connect(function()
		local ly = LST:FindFirstChildOfClass("UIListLayout")
		if ly then LST.CanvasSize = UDim2.new(0,0,0,ly.AbsoluteContentSize.Y) end
	end)
end

pickSize()
applySize(true)
inFX()
canvas()
fetch()