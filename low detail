local Notification = nil

repeat
    local s, r = pcall(function()
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/NamelessAdminNotifications.lua"))()
    end)

    if s then
        Notification = r
    else
        warn("Couldn't load notification module, retrying...")
        task.wait()
    end
until Notification ~= nil

local Notify = Notification.Notify

local function DoNotif(txt, dur, naem)
    if not dur then dur = 5 end
    if not naem then naem = 'Notification' end
    Notify({
        Description = txt,
        Title = naem,
        Duration = dur,
    })
end

_G.Ignore = _G.Ignore or {}
_G.WaitPerAmount = _G.WaitPerAmount or 500
_G.SendNotifications = _G.SendNotifications or true
_G.ConsoleLogs = _G.ConsoleLogs or false

if not game:IsLoaded() then
    repeat task.wait() until game:IsLoaded()
end

_G.Settings = _G.Settings or {
    Players = {
        ["Ignore Me"] = true,
        ["Ignore Others"] = true,
        ["Ignore Tools"] = true
    },
    Meshes = {
        NoMesh = false,
        NoTexture = false,
        Destroy = false
    },
    Images = {
        Invisible = true,
        Destroy = false
    },
    Explosions = {
        Smaller = true,
        Invisible = false,
        Destroy = false
    },
    Particles = {
        Invisible = true,
        Destroy = false
    },
    TextLabels = {
        LowerQuality = false,
        Invisible = false,
        Destroy = false
    },
    MeshParts = {
        LowerQuality = true,
        Invisible = false,
        NoTexture = false,
        NoMesh = false,
        Destroy = false
    },
    Other = {
        ["FPS Cap"] = 240,
        ["No Camera Effects"] = true,
        ["No Clothes"] = true,
        ["Low Water Graphics"] = true,
        ["No Shadows"] = true,
        ["Low Rendering"] = true,
        ["Low Quality Parts"] = true,
        ["Low Quality Models"] = true,
        ["Reset Materials"] = true,
        ["Lower Quality MeshParts"] = true
    }
}

local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local MaterialService = game:GetService("MaterialService")
local ME = Players.LocalPlayer
local CanBeEnabled = {"ParticleEmitter", "Trail", "Smoke", "Fire", "Sparkles"}

local function DebugLog(message)
    if _G.ConsoleLogs then
        print(message)
    end
    if _G.SendNotifications then
        DoNotif(message, 5, "Debug")
    end
end

local function PartOfCharacter(instance)
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= ME and player.Character and instance:IsDescendantOf(player.Character) then
            return true
        end
    end
    return false
end

local function DescendantOfIgnore(instance)
    for _, v in pairs(_G.Ignore) do
        if instance:IsDescendantOf(v) then
            return true
        end
    end
    return false
end

local function CheckIfBad(instance)
    if not instance:IsDescendantOf(Players) and (_G.Settings.Players["Ignore Others"] and not PartOfCharacter(instance) or not _G.Settings.Players["Ignore Others"]) and (_G.Settings.Players["Ignore Me"] and ME.Character and not instance:IsDescendantOf(ME.Character) or not _G.Settings.Players["Ignore Me"]) and (_G.Settings.Players["Ignore Tools"] and not instance:IsA("BackpackItem") and not instance:FindFirstAncestorWhichIsA("BackpackItem") or not _G.Settings.Players["Ignore Tools"]) and (_G.Ignore and not table.find(_G.Ignore, instance) and not DescendantOfIgnore(instance) or (not _G.Ignore or type(_G.Ignore) ~= "table" or #_G.Ignore <= 0)) then
        if instance:IsA("DataModelMesh") then
            if _G.Settings.Meshes.NoMesh and instance:IsA("SpecialMesh") then
                instance.MeshId = ""
            end
            if _G.Settings.Meshes.NoTexture and instance:IsA("SpecialMesh") then
                instance.TextureId = ""
            end
            if _G.Settings.Meshes.Destroy or _G.Settings["No Meshes"] then
                instance:Destroy()
            end
        elseif instance:IsA("FaceInstance") then
            if _G.Settings.Images.Invisible then
                instance.Transparency = 1
                instance.Shiny = 1
            end
            if _G.Settings.Images.Destroy then
                instance:Destroy()
            end
        elseif instance:IsA("ShirtGraphic") then
            if _G.Settings.Images.Invisible then
                instance.Graphic = ""
            end
            if _G.Settings.Images.Destroy then
                instance:Destroy()
            end
        elseif table.find(CanBeEnabled, instance.ClassName) then
            if _G.Settings.Particles.Invisible then
                instance.Enabled = false
            end
            if _G.Settings.Particles.Destroy then
                instance:Destroy()
            end
        elseif instance:IsA("PostEffect") and _G.Settings.Other["No Camera Effects"] then
            instance.Enabled = false
        elseif instance:IsA("Explosion") then
            if _G.Settings.Explosions.Smaller then
                instance.BlastPressure = 1
                instance.BlastRadius = 1
            end
            if _G.Settings.Explosions.Invisible then
                instance.Visible = false
            end
            if _G.Settings.Explosions.Destroy then
                instance:Destroy()
            end
        elseif instance:IsA("Clothing") or instance:IsA("SurfaceAppearance") or instance:IsA("BaseWrap") then
            if _G.Settings.Other["No Clothes"] then
                instance:Destroy()
            end
        elseif instance:IsA("BasePart") and not instance:IsA("MeshPart") then
            if _G.Settings.Other["Low Quality Parts"] then
                instance.Material = Enum.Material.Plastic
                instance.Reflectance = 0
            end
        elseif instance:IsA("TextLabel") and instance:IsDescendantOf(workspace) then
            if _G.Settings.TextLabels.LowerQuality then
                instance.Font = Enum.Font.SourceSans
                instance.TextScaled = false
                instance.RichText = false
                instance.TextSize = 14
            end
            if _G.Settings.TextLabels.Invisible then
                instance.Visible = false
            end
            if _G.Settings.TextLabels.Destroy then
                instance:Destroy()
            end
        elseif instance:IsA("Model") then
            if _G.Settings.Other["Low Quality Models"] then
                instance.LevelOfDetail = 1
            end
        elseif instance:IsA("MeshPart") then
            if _G.Settings.MeshParts.LowerQuality then
                instance.RenderFidelity = 2
                instance.Reflectance = 0
                instance.Material = Enum.Material.Plastic
            end
            if _G.Settings.MeshParts.Invisible then
                instance.Transparency = 1
            end
            if _G.Settings.MeshParts.NoTexture then
                instance.TextureID = ""
            end
            if _G.Settings.MeshParts.NoMesh then
                instance.MeshId = ""
            end
            if _G.Settings.MeshParts.Destroy then
                instance:Destroy()
            end
        end
    end
end

local success, connection = pcall(function()
    return game.DescendantAdded:Connect(function(value)
        task.wait(_G.LoadedWait or 1)
        CheckIfBad(value)
    end)
end)

local Descendants = game:GetDescendants()
local StartNumber = _G.WaitPerAmount or 500
local WaitNumber = _G.WaitPerAmount or 500

for i, v in pairs(Descendants) do
    CheckIfBad(v)
    if i == WaitNumber then
        task.wait()
        WaitNumber = WaitNumber + StartNumber
    end
end

DebugLog("FPS Booster Loaded Successfully!")