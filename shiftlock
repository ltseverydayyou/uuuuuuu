local shiftlockk = Instance.new("ScreenGui")
local LockButton = Instance.new("ImageButton")
local btnIcon = Instance.new("ImageLabel")
local buttonEffect = Instance.new("UICorner")
local buttonStroke = Instance.new("UIStroke")

shiftlockk.Name = "shiftlockk"
shiftlockk.Parent = game.CoreGui
shiftlockk.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
shiftlockk.ResetOnSpawn = false

LockButton.Name = "LockButton"
LockButton.Parent = shiftlockk
LockButton.AnchorPoint = Vector2.new(0.5, 0.5)
LockButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
LockButton.BackgroundTransparency = 0.3
LockButton.BorderColor3 = Color3.fromRGB(27, 42, 53)
LockButton.BorderSizePixel = 0
LockButton.Position = UDim2.new(0.785148501, 0, 0.865914762, 0)
LockButton.Size = UDim2.new(0, 65, 0, 65)
LockButton.ZIndex = 3
LockButton.Image = ""
LockButton.AutoButtonColor = true

buttonEffect.Parent = LockButton
buttonEffect.CornerRadius = UDim.new(1, 0)

buttonStroke.Parent = LockButton
buttonStroke.Color = Color3.fromRGB(0, 133, 199)
buttonStroke.Thickness = 2
buttonStroke.Transparency = 0.3

btnIcon.Name = "btnIcon"
btnIcon.Parent = LockButton
btnIcon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
btnIcon.BackgroundTransparency = 1.000
btnIcon.Position = UDim2.new(0.15, 0, 0.15, 0)
btnIcon.Size = UDim2.new(0.7, 0, 0.7, 0)
btnIcon.ZIndex = 3
btnIcon.Image = "rbxasset://textures/ui/mouseLock_off.png"
btnIcon.ImageColor3 = Color3.fromRGB(255, 255, 255)
btnIcon.ScaleType = Enum.ScaleType.Fit

local tweenService = game:GetService("TweenService")
local hoverInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local clickInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local defaultProps = {
    BackgroundTransparency = 0.3,
    Size = UDim2.new(0, 65, 0, 65)
}

local hoverProps = {
    BackgroundTransparency = 0.1,
    Size = UDim2.new(0, 70, 0, 70)
}

local clickProps = {
    BackgroundTransparency = 0,
    Size = UDim2.new(0, 60, 0, 60)
}

local defaultTween = tweenService:Create(LockButton, hoverInfo, defaultProps)
local hoverTween = tweenService:Create(LockButton, hoverInfo, hoverProps)
local clickTween = tweenService:Create(LockButton, clickInfo, clickProps)

LockButton.MouseEnter:Connect(function()
    hoverTween:Play()
end)

LockButton.MouseLeave:Connect(function()
    defaultTween:Play()
end)

LockButton.MouseButton1Down:Connect(function()
    clickTween:Play()
end)

LockButton.MouseButton1Up:Connect(function()
    hoverTween:Play()
end)

NAdrag=function(ui, dragui)
    if not dragui then dragui = ui end
    local UserInputService = game:GetService("UserInputService")

    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        local newXOffset = startPos.X.Offset + delta.X
        local newYOffset = startPos.Y.Offset + delta.Y
        
        local screenSize = ui.Parent.AbsoluteSize
        local newXScale = startPos.X.Scale + (newXOffset / screenSize.X)
        local newYScale = startPos.Y.Scale + (newYOffset / screenSize.Y)
    
        ui.Position = UDim2.new(newXScale, 0, newYScale, 0)
    end

    dragui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = ui.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    dragui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
    ui.Active=true
end

NAdrag(LockButton)

local function YDYMLAX_fake_script()
    local script = Instance.new('LocalScript', LockButton)

    local Input = game:GetService("UserInputService")
    local V = false

    local main = script.Parent
    local buttonStroke = main:FindFirstChildOfClass("UIStroke")

    main.MouseButton1Click:Connect(function()
        V = not V
        
        if V then
            main.btnIcon.ImageColor3 = Color3.fromRGB(0, 170, 255)
            buttonStroke.Color = Color3.fromRGB(0, 170, 255)
            buttonStroke.Thickness = 3
            
            spawn(function()
                while V do
                    for i = 0.3, 0.7, 0.1 do
                        if not V then break end
                        buttonStroke.Transparency = i
                        wait(0.1)
                    end
                    for i = 0.7, 0.3, -0.1 do
                        if not V then break end
                        buttonStroke.Transparency = i
                        wait(0.1)
                    end
                end
            end)
            
            ForceShiftLock()
        else
            main.btnIcon.ImageColor3 = Color3.fromRGB(255, 255, 255)
            buttonStroke.Color = Color3.fromRGB(0, 133, 199)
            buttonStroke.Thickness = 2
            buttonStroke.Transparency = 0.3
            EndForceShiftLock()
        end
    end)

    local g = nil
    local GameSettings = UserSettings():GetService("UserGameSettings")
    local J = nil

    function ForceShiftLock()
        local i, k = pcall(function()
            return GameSettings.RotationType
        end)
        _ = i
        g = k
        J = game:GetService("RunService").RenderStepped:Connect(function()
            pcall(function()
                GameSettings.RotationType = Enum.RotationType.CameraRelative
            end)
        end)
    end

    function EndForceShiftLock()
        if J then
            pcall(function()
                GameSettings.RotationType = g or Enum.RotationType.MovementRelative
            end)
            J:Disconnect()
        end
    end
end
coroutine.wrap(YDYMLAX_fake_script)()