-- this is so trash
if game.GameId==1524368576 then
plr=game:GetService("Players").LocalPlayer
ui=plr.PlayerGui
rs=game:GetService("RunService")

a=false
b=false
c=false
d=false
e=false
f=false
g=false

if ui:FindFirstChild("god") then
a=true
else
end
if ui:FindFirstChild("thirdperson") then
b=true
else
end
if ui:FindFirstChild("hasPortalGun") then
c=true
else
end
if ui:FindFirstChild("ForceFOV") then
d=true
else
end
if ui:FindFirstChild("velocityLimit") then
e=true
else
end
if ui:FindFirstChild("wantedColor") then
f=true
else
end
if ui:FindFirstChild("portalsIgnoreMaterial") then
g=true
else
end

wait();

if a and b and c and d and e and f and g then
print'values found loading script'
else
return warn'missing values cancelling script'
end


local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/ltseverydayyou/Rayfield-backup/main/Rayfield'))()

getgenv().GunColor=Color3.fromRGB(255,255,255)
getgenv().rgbEnabled=false
getgenv().gunLoop=false
getgenv().gunLevel=2

badgeList = {
	2124531179,
	2124531181,
	2124531182,
	2124531184,
	2124531185,
	2124531198,
	2124531213,
	2124531723,
	2124587582,
	2124587583,
	2124587597,
	2124587936,
	2124948632,
	2124948674,
	2124948729,
	2124948745,
	2124948842,
	2124969259,
	2124970540,
	2125003412,
	2125003419,
	2125793440,
	2143211391
}

local function getBadges()
	for _, id in ipairs(badgeList) do
		game:GetService("ReplicatedStorage"):FindFirstChild("DataStore"):FindFirstChild("Award"):FireServer(id)
	end
end

local Window = Rayfield:CreateWindow({
	Name = "TUNNELER",
	LoadingTitle = "TUNNELER",
	LoadingSubtitle = "i am currently inside your tunnels",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "tunnels",
		FileName = "meal"
	}
})

local Tab = Window:CreateTab("Misc", 4483362458)
local Tab1 = Window:CreateTab("Gun Functions", 4483362458)

Tab:CreateButton({
	Name = "Get All Bagdes",
	Callback = function()
		getBadges()
	end,
})

local gmod = Tab:CreateToggle({
	Name = "God Mode",
	CurrentValue = false,
	Flag = "god",
	Callback = function(v)
		ui.god.Value=v
	end,
})

local lol = Tab:CreateToggle({
	Name = "Third Person",
	CurrentValue = false,
	Flag = "thirdp",
	Callback = function(v)
		ui.thirdperson.Value=v
	end,
})

local check = Tab:CreateToggle({
	Name = "Portal Gun",
	CurrentValue = false,
	Flag = "gun",
	Callback = function(v)
		ui.hasPortalGun.Value=v
	end,
})

Tab:CreateSlider({
	Name = "Field Of View",
	Range = {0, 120},
	Increment = 1,
	Suffix = "FOV",
	CurrentValue = 70,
	Flag = "fieldofview",
	Callback = function(fov)
		ui.ForceFOV.Value=fov
	end,
})

Tab:CreateInput({
	Name = "Velocity Limit",
	PlaceholderText = "Input Limit",
	RemoveTextAfterFocusLost = false,
	Flag = "velLimit",
	Callback = function(vel)
		ui.velocityLimit.Value=vel
	end,
})

Tab1:CreateColorPicker({
	Name = "Portal Gun Color",
	Color = Color3.fromRGB(255, 255, 255),
	Flag = "ColorPicker1",
	Callback = function(c)
		ui.wantedColor.Value=c
		GunColor=c
	end,
})

Tab1:CreateToggle({
	Name = "Loop Portal Gun Color",
	CurrentValue = false,
	Flag = "loopRGB",
	Callback = function(v)
		gunLoop=v
	end,
})

Tab1:CreateToggle({
	Name = "Rainbow Gun",
	CurrentValue = false,
	Flag = "RGB",
	Callback = function(v)
		rgbEnabled=v
	end,
})

local no = Tab1:CreateToggle({
	Name = "Portal Ignore Material",
	CurrentValue = false,
	Flag = "materials",
	Callback = function(v)
		ui.portalsIgnoreMaterial.Value=v
	end,
})

Tab1:CreateSlider({
	Name = "Portal Level",
	Range = {0, 2},
	Increment = 1,
	CurrentValue = 2,
	Flag = "portalLevel",
	Callback = function(lvl)
		gunLevel=lvl
	end,
})


task.spawn(function()
	ui:FindFirstChild("hasPortalGun").Changed:connect(function(v)
		wait();
		check:Set(v)
	end)
	ui:FindFirstChild("thirdperson").Changed:connect(function(v)
		wait();
		lol:Set(v)
	end)
	ui:FindFirstChild("portalsIgnoreMaterial").Changed:connect(function(v)
		wait();
		no:Set(v)
	end)
	ui:FindFirstChild("god").Changed:connect(function(v)
		wait();
		gmod:Set(v)
	end)
end)


task.spawn(function()
	while wait() do
		pcall(function()
			if rgbEnabled then
				for i = 0,255,5 do
					ui.wantedColor.Value = Color3.fromRGB(255,i,0)
					wait(0.01)
				end
				for i = 255,0,-5 do
					ui.wantedColor.Value = Color3.fromRGB(i,255,0)
					wait(0.01)
				end
				for i = 0,255,5 do
					ui.wantedColor.Value = Color3.fromRGB(0,255,i)
					wait(0.01)
				end
				for i = 255,0,-5 do
					ui.wantedColor.Value = Color3.fromRGB(0,i,255)
					wait(0.01)
				end
				for i = 0,255,5 do
					ui.wantedColor.Value = Color3.fromRGB(i,0,255)
					wait(0.01)
				end
				for i = 255,0,-5 do
					ui.wantedColor.Value = Color3.fromRGB(255,0,i)
					wait(0.01)
				end
			end
		end)
	end
end)

rs.Stepped:connect(function()
	ui.PortalLevel.Value=gunLevel
	if not rgbEnabled and gunLoop then
		ui.wantedColor.Value=GunColor
	end
end)
Rayfield:LoadConfiguration()
end